{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bogdan\\\\Desktop\\\\Task 3 React\\\\my-app\\\\src\\\\components\\\\SignForm\\\\SignUp.jsx\";\nimport React, { useRef } from 'react';\nimport { useAlert } from 'react-alert';\nimport PropTypes from 'prop-types';\nimport { ENGLISH } from '../../actions/languageActions';\n\nconst SignUp = props => {\n  const {\n    language,\n    proxy,\n    signUp: propsSignUp\n  } = props;\n  const email = useRef(null);\n  const password = useRef(null);\n  const checkPassword = useRef(null);\n  const alert = useAlert();\n\n  function signUp(e) {\n    e.preventDefault();\n    if (checkAllFields()) propsSignUp(proxy + '/sign_');\n  }\n\n  function checkAllFields() {\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const passwordRegex = /^[a-zA-Zа-яА-ЯіїІЇ0-9][a-zA-Zа-яА-Яії0-9]{3,20}$/u;\n\n    if (!emailRegex.test(email.current.value)) {\n      alert.info( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 29\n        }\n      }, language === 'eng' ? 'Info' : 'Інфо'), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"alert-text text-nowrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 102\n        }\n      }, language === 'eng' ? 'Invalid email' : 'Неправильний емайл')));\n      return false;\n    } else if (!passwordRegex.test(password.current.value)) {\n      alert.info( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }\n      }, language === 'eng' ? 'Info' : 'Інфо'), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"alert-text text-nowrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 102\n        }\n      }, language === 'eng' ? 'Invalid password.' : 'Неправильний пароль.')));\n      alert.info( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }\n      }, language === 'eng' ? 'Info' : 'Інфо'), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"alert-text text-nowrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 102\n        }\n      }, language === 'eng' ? 'Your password must be 4-20 characters аnd must not contain spaces' : ' Ваш пароль повинен бути довжиною 4-20 символів та не мітсити пробілів')));\n      return false;\n    } else if (password.current.value !== checkPassword.current.value) {\n      alert.info( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }\n      }, language === 'eng' ? 'Info' : 'Інфо'), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"alert-text text-nowrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 102\n        }\n      }, language === 'eng' ? 'Password does not match' : 'Пароль не співпадає')));\n      return false;\n    }\n\n    return true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: signUp,\n    className: \"form sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, language === ENGLISH ? 'Time to feel like home' : 'Час почувати себе як удома'), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, language === ENGLISH ? 'Email' : 'Емейл'), /*#__PURE__*/React.createElement(\"input\", {\n    ref: email,\n    type: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, language === ENGLISH ? 'Password' : 'Пароль'), /*#__PURE__*/React.createElement(\"input\", {\n    ref: password,\n    type: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, language === ENGLISH ? 'Check Password' : 'Підтвердити Пароль'), /*#__PURE__*/React.createElement(\"input\", {\n    ref: checkPassword,\n    type: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, language === ENGLISH ? 'Sign Up' : 'Реєстрація'));\n};\n\nSignUp.propTypes = {\n  language: PropTypes.string.isRequired,\n  signUp: PropTypes.func.isRequired,\n  proxy: PropTypes.string.isRequired\n};\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/Bogdan/Desktop/Task 3 React/my-app/src/components/SignForm/SignUp.jsx"],"names":["React","useRef","useAlert","PropTypes","ENGLISH","SignUp","props","language","proxy","signUp","propsSignUp","email","password","checkPassword","alert","e","preventDefault","checkAllFields","emailRegex","passwordRegex","test","current","value","info","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport PropTypes from 'prop-types';\r\nimport { ENGLISH } from '../../actions/languageActions';\r\nconst SignUp = (props) => {\r\n    const { language, proxy, signUp: propsSignUp } = props;\r\n    const email = useRef(null);\r\n    const password = useRef(null);\r\n    const checkPassword = useRef(null);\r\n    const alert = useAlert();\r\n    function signUp(e) {\r\n        e.preventDefault();\r\n        if (checkAllFields())\r\n            propsSignUp(proxy + '/sign_');\r\n    }\r\n    function checkAllFields() {\r\n        const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        const passwordRegex = /^[a-zA-Zа-яА-ЯіїІЇ0-9][a-zA-Zа-яА-Яії0-9]{3,20}$/u;\r\n        if (!emailRegex.test(email.current.value)) {\r\n            alert.info(<div><div className='alert-title'>{language === 'eng' ? 'Info' : 'Інфо'}</div><p className='alert-text text-nowrap'>{language === 'eng' ? 'Invalid email' : 'Неправильний емайл'}</p></div>);\r\n            return false;\r\n        } else if (!passwordRegex.test(password.current.value)) {\r\n            alert.info(<div><div className='alert-title'>{language === 'eng' ? 'Info' : 'Інфо'}</div><p className='alert-text text-nowrap'>{language === 'eng' ? 'Invalid password.' : 'Неправильний пароль.'}</p></div>);\r\n            alert.info(<div><div className='alert-title'>{language === 'eng' ? 'Info' : 'Інфо'}</div><p className='alert-text text-nowrap'>{language === 'eng' ? 'Your password must be 4-20 characters аnd must not contain spaces' : ' Ваш пароль повинен бути довжиною 4-20 символів та не мітсити пробілів'}</p></div>);\r\n            return false;\r\n        } else if (password.current.value !== checkPassword.current.value) {\r\n            alert.info(<div><div className='alert-title'>{language === 'eng' ? 'Info' : 'Інфо'}</div><p className='alert-text text-nowrap'>{language === 'eng' ? 'Password does not match' : 'Пароль не співпадає'}</p></div>);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    return (\r\n        <form onSubmit={signUp} className=\"form sign-up\">\r\n            <h2>{language === ENGLISH ? 'Time to feel like home' : 'Час почувати себе як удома'}</h2>\r\n            <label>\r\n                <span>{language === ENGLISH ? 'Email' : 'Емейл'}</span>\r\n                <input ref={email} type=\"email\" required />\r\n            </label>\r\n            <label>\r\n                <span>{language === ENGLISH ? 'Password' : 'Пароль'}</span>\r\n                <input ref={password} type=\"password\" required />\r\n            </label>\r\n            <label>\r\n                <span>{language === ENGLISH ? 'Check Password' : 'Підтвердити Пароль'}</span>\r\n                <input ref={checkPassword} type=\"password\" required />\r\n            </label>\r\n            <button type=\"submit\" className=\"submit\">{language === ENGLISH ? 'Sign Up' : 'Реєстрація'}</button>\r\n        </form>\r\n    )\r\n}\r\nSignUp.propTypes = {\r\n    language: PropTypes.string.isRequired,\r\n    signUp: PropTypes.func.isRequired,\r\n    proxy: PropTypes.string.isRequired,\r\n}\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}