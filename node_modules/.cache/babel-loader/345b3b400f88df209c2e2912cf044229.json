{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bogdan\\\\Desktop\\\\Task 3 React\\\\my-app \\u2014 \\u043A\\u043E\\u043F\\u0438\\u044F\\\\src\\\\components\\\\Header.jsx\";\nimport React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Switcher from './Switcher';\nimport '../style/header.css';\nimport { DARK } from '../actions/themeActions';\nimport { ENGLISH } from '../actions/languageActions';\n\nconst Header = props => {\n  const {\n    toggleTheme,\n    theme,\n    language,\n    toggleLanguage\n  } = props;\n  const changeLangElement = useRef(null);\n  const changeThemeElement = useRef(null);\n\n  function toggleCheckedLang() {\n    changeLangElement.current.checked = !changeLangElement.current.checked;\n  }\n\n  function toggleCheckedTheme() {\n    changeThemeElement.current.checked = !changeThemeElement.current.checked;\n  }\n\n  useEffect(() => {\n    if (theme === DARK) changeThemeElement.current.checked = true;\n    if (language === ENGLISH) changeLangElement.current.checked = true;\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid header-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"container header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"language-switcher header-switcher d-flex align-items-center\",\n    onClick: () => {\n      toggleCheckedLang();\n      toggleLanguage();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"languageSwitcher\",\n    className: \"mb-0 mr-1 header-switcher-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, language === ENGLISH ? 'Ua' : 'Укр'), /*#__PURE__*/React.createElement(Switcher, {\n    refElement: changeLangElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"languageSwitcher\",\n    className: \"mb-0 ml-1 header-switcher-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, language === ENGLISH ? 'En' : 'Англ')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"theme-switcher  header-switcher d-flex align-items-center\",\n    onClick: () => {\n      toggleCheckedTheme();\n      toggleTheme();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"themeSwitcher\",\n    className: \"mb-0 mr-1 header-switcher-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, language === ENGLISH ? 'Light' : 'Світла'), /*#__PURE__*/React.createElement(Switcher, {\n    refElement: changeThemeElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"themeSwitcher\",\n    className: \"mb-0 ml-1 header-switcher-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, language === ENGLISH ? 'Dark' : 'Темна'))));\n};\n\nHeader.propTypes = {\n  language: PropTypes.string.isRequired,\n  toggleLanguage: PropTypes.func.isRequired,\n  toggleTheme: PropTypes.func.isRequired,\n  theme: PropTypes.string.isRequired\n};\nexport default Header;","map":{"version":3,"sources":["C:/Users/Bogdan/Desktop/Task 3 React/my-app — копия/src/components/Header.jsx"],"names":["React","useRef","useEffect","PropTypes","Switcher","DARK","ENGLISH","Header","props","toggleTheme","theme","language","toggleLanguage","changeLangElement","changeThemeElement","toggleCheckedLang","current","checked","toggleCheckedTheme","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Switcher from './Switcher';\r\nimport '../style/header.css';\r\nimport { DARK } from '../actions/themeActions';\r\nimport { ENGLISH } from '../actions/languageActions';\r\nconst Header = (props) => {\r\n    const { toggleTheme, theme, language, toggleLanguage } = props;\r\n    const changeLangElement = useRef(null);\r\n    const changeThemeElement = useRef(null);\r\n    function toggleCheckedLang() {\r\n        changeLangElement.current.checked = !changeLangElement.current.checked;\r\n    }\r\n    function toggleCheckedTheme() {\r\n        changeThemeElement.current.checked = !changeThemeElement.current.checked;\r\n    }\r\n    useEffect(() => {\r\n        if (theme === DARK)\r\n            changeThemeElement.current.checked = true\r\n        if (language === ENGLISH)\r\n            changeLangElement.current.checked = true;\r\n    }, []);\r\n    return (\r\n        <div className='container-fluid header-wrapper'>\r\n            <header className='container header'>\r\n                <div className='language-switcher header-switcher d-flex align-items-center' onClick={() => { toggleCheckedLang(); toggleLanguage() }}>\r\n                    <label htmlFor='languageSwitcher' className=\"mb-0 mr-1 header-switcher-label\">{language === ENGLISH ? 'Ua' : 'Укр'}</label>\r\n                    <Switcher refElement={changeLangElement} />\r\n                    <label htmlFor='languageSwitcher' className=\"mb-0 ml-1 header-switcher-label\">{language === ENGLISH ? 'En' : 'Англ'}</label>\r\n                </div>\r\n                <div className='theme-switcher  header-switcher d-flex align-items-center' onClick={() => { toggleCheckedTheme(); toggleTheme() }}>\r\n                    <label htmlFor='themeSwitcher' className=\"mb-0 mr-1 header-switcher-label\">{language === ENGLISH ? 'Light' : 'Світла'}</label>\r\n                    <Switcher refElement={changeThemeElement} />\r\n                    <label htmlFor='themeSwitcher' className=\"mb-0 ml-1 header-switcher-label\">{language === ENGLISH ? 'Dark' : 'Темна'}</label>\r\n                </div>\r\n                \r\n            </header>\r\n        </div>\r\n    )\r\n}\r\nHeader.propTypes = {\r\n    language: PropTypes.string.isRequired,\r\n    toggleLanguage: PropTypes.func.isRequired,\r\n    toggleTheme: PropTypes.func.isRequired,\r\n    theme: PropTypes.string.isRequired\r\n}\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}