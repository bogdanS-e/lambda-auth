{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bogdan\\\\Desktop\\\\Task 3 React\\\\my-app\\\\src\\\\components\\\\SignForm\\\\SignIn.jsx\";\nimport React, { useRef } from 'react';\nimport { useAlert } from 'react-alert';\nimport { ENGLISH } from '../../actions/languageActions';\n\nconst SignIn = ({\n  language\n}) => {\n  const email = useRef(null);\n  const password = useRef(null);\n  const alert = useAlert();\n\n  function signIn(e) {\n    e.preventDefault();\n    console.log(checkAllFields());\n  }\n\n  function checkAllFields() {\n    if (email.current.value.length === 0 || password.current.value.length === 0) {\n      alert.info( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"alert-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 29\n        }\n      }, language === 'eng' ? 'Info' : 'Інфо'), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"alert-text text-nowrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 102\n        }\n      }, language === 'eng' ? 'Fill in all fields' : 'Заповніть всі поля')));\n      return false;\n    }\n\n    return true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: signIn,\n    className: \"form sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, language === ENGLISH ? 'Welcome back' : 'З поверненням'), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, language === ENGLISH ? 'Email' : 'Емейл'), /*#__PURE__*/React.createElement(\"input\", {\n    ref: email,\n    type: \"text\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, language === ENGLISH ? 'Password' : 'Пароль'), /*#__PURE__*/React.createElement(\"input\", {\n    ref: password,\n    type: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, language === ENGLISH ? 'Sign In' : 'Автентифікація'));\n};\n\nSignIn.propTypes = {\n  language: PropTypes.string.isRequired,\n  signUp: PropTypes.func.isRequired,\n  proxy: PropTypes.string.isRequired,\n  isFetching: PropTypes.bool.isRequired\n};\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/Bogdan/Desktop/Task 3 React/my-app/src/components/SignForm/SignIn.jsx"],"names":["React","useRef","useAlert","ENGLISH","SignIn","language","email","password","alert","signIn","e","preventDefault","console","log","checkAllFields","current","value","length","info","propTypes","PropTypes","string","isRequired","signUp","func","proxy","isFetching","bool"],"mappings":"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","sourcesContent":["import React, { useRef }  from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport {ENGLISH} from '../../actions/languageActions';\r\nconst SignIn = ({language}) => {\r\n    const email = useRef(null);\r\n    const password = useRef(null);\r\n    const alert = useAlert();\r\n    function signIn(e) {\r\n        e.preventDefault();\r\n        console.log(checkAllFields());\r\n    }\r\n    function checkAllFields() {\r\n        if(email.current.value.length === 0 || password.current.value.length === 0){\r\n            alert.info(<div><div className='alert-title'>{language === 'eng' ? 'Info' : 'Інфо'}</div><p className='alert-text text-nowrap'>{language === 'eng' ? 'Fill in all fields' : 'Заповніть всі поля'}</p></div>);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    return (\r\n        <form onSubmit={signIn} className=\"form sign-in\">\r\n            <h2>{language === ENGLISH ? 'Welcome back' : 'З поверненням'}</h2>\r\n            <label>\r\n                <span>{language === ENGLISH ? 'Email' : 'Емейл'}</span>\r\n                <input ref={email} type=\"text\" required />\r\n            </label>\r\n            <label>\r\n                <span>{language === ENGLISH ? 'Password' : 'Пароль'}</span>\r\n                <input ref={password} type=\"password\" required />\r\n            </label>\r\n            <button type=\"submit\" className=\"submit\">{language === ENGLISH ? 'Sign In' : 'Автентифікація'}</button>\r\n        </form>\r\n    )\r\n}\r\nSignIn.propTypes = {\r\n    language: PropTypes.string.isRequired,\r\n    signUp: PropTypes.func.isRequired,\r\n    proxy: PropTypes.string.isRequired,\r\n    isFetching: PropTypes.bool.isRequired,\r\n}\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}